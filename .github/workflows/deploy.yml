name: Deploy FixPoint

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    # Setup Java for Backend
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    # Create test application.properties to avoid database conflicts
    - name: Setup Test Configuration
      run: |
        mkdir -p src/test/resources
        cat > src/test/resources/application-test.properties << EOF
        # Test configuration
        spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
        spring.datasource.driver-class-name=org.h2.Driver
        spring.datasource.username=sa
        spring.datasource.password=
        spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
        spring.jpa.hibernate.ddl-auto=create-drop
        spring.h2.console.enabled=false
        
        # Disable email for tests
        spring.mail.host=
        spring.mail.port=587
        spring.mail.username=
        spring.mail.password=
        
        # Test API key (dummy)
        gemini.api.key=test-api-key-for-ci
        gemini.api.url=https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent
        EOF
        
    # Run Backend Tests
    - name: Test Backend
      run: ./mvnw test
      env:
        SPRING_PROFILES_ACTIVE: test
        
    # Frontend build test (instead of unit tests)
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Test Frontend Build
      run: |
        cd frontend
        npm install
        npm run build
        
  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    # Setup Java for Backend
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    # Setup Node for Frontend
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    # Build Backend
    - name: Build Backend
      run: ./mvnw clean package -DskipTests
      
    # Build Frontend
    - name: Build Frontend
      run: |
        cd frontend
        npm install
        npm run build
        
    # Deploy to GitHub Pages (Frontend only)
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./frontend/build
