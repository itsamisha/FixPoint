{"ast":null,"code":"var _jsxFileName = \"E:\\\\Competition\\\\Hackathon\\\\Fixpoint_javafest\\\\FixPoint\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport SockJS from 'sockjs-client';\nimport { CompatClient, Stomp } from '@stomp/stompjs';\nimport api from '../services/api';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WS_URL = '/ws-chat';\nconst API_USERS = '/api/chat/users';\nconst Chat = ({\n  onClose\n}) => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [stompClient, setStompClient] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // Fetch user list\n  useEffect(() => {\n    api.get(API_USERS).then(res => {\n      setUsers(res.data.filter(u => u.id !== user.id));\n    });\n  }, [user.id]);\n\n  // Connect to WebSocket only once on mount\n  useEffect(() => {\n    const socket = new SockJS(WS_URL);\n    const client = Stomp.over(socket);\n    setIsConnected(false);\n    client.connect({}, () => {\n      setIsConnected(true);\n      client.subscribe(`/user/${user.username}/queue/messages`, msg => {\n        const body = JSON.parse(msg.body);\n        // Only add message if it is between the logged-in user and the selected user\n        setMessages(prev => {\n          // If no user selected, don't add\n          if (!selectedUser) return prev;\n          const isBetween = body.sender.id === user.id && body.receiver.id === selectedUser.id || body.sender.id === selectedUser.id && body.receiver.id === user.id;\n          if (isBetween) {\n            return [...prev, body];\n          }\n          return prev;\n        });\n      });\n    }, err => {\n      setIsConnected(false);\n      console.error('STOMP connection error:', err);\n    });\n    setStompClient(client);\n    return () => {\n      client.disconnect();\n      setIsConnected(false);\n    };\n    // eslint-disable-next-line\n  }, [user.username]);\n\n  // Fetch chat history when user selected\n  useEffect(() => {\n    if (selectedUser) {\n      api.get(`/api/chat/history?userId=${selectedUser.id}`).then(res => {\n        setMessages(res.data);\n      }).catch(err => {\n        var _err$response;\n        setMessages([]);\n        // Optionally show error to user\n        console.error('Failed to fetch chat history:', (err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n        alert('Failed to load chat history. Please try again or contact support.');\n      });\n    }\n  }, [selectedUser]);\n\n  // Scroll to bottom on new message\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const sendMessage = e => {\n    e.preventDefault();\n    if (!input.trim() || !selectedUser || !isConnected || !stompClient) return;\n    try {\n      const msg = {\n        content: input,\n        receiver: {\n          id: selectedUser.id\n        },\n        type: 'TEXT',\n        sender: {\n          id: user.id\n        } // for optimistic UI\n      };\n      // Optimistically add the message to the chat\n      setMessages(prev => [...prev, {\n        ...msg,\n        sender: {\n          id: user.id\n        },\n        receiver: {\n          id: selectedUser.id\n        }\n      }]);\n      stompClient.send('/app/chat.send', {}, JSON.stringify(msg));\n      setInput('');\n    } catch (err) {\n      alert('Unable to send message: STOMP connection not ready.');\n      console.error('Send message error:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      height: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 120,\n        background: '#f5f5f5',\n        borderRight: '1px solid #eee',\n        overflowY: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: 8,\n          fontWeight: 'bold',\n          borderBottom: '1px solid #ddd'\n        },\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }, this), users.map(u => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: 8,\n          cursor: 'pointer',\n          background: (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) === u.id ? '#e3f2fd' : 'transparent',\n          borderBottom: '1px solid #eee',\n          fontWeight: (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) === u.id ? 'bold' : 'normal'\n        },\n        onClick: () => setSelectedUser(u),\n        children: u.fullName || u.username\n      }, u.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: 8,\n          borderBottom: '1px solid #eee',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          background: '#f7f7f7'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: selectedUser ? selectedUser.fullName || selectedUser.username : 'Select a user'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          style: {\n            background: 'none',\n            border: 'none',\n            fontSize: 18,\n            cursor: 'pointer'\n          },\n          children: \"\\u2716\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          overflowY: 'auto',\n          padding: 12,\n          background: '#fafbfc'\n        },\n        children: [selectedUser ? messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: msg.sender.id === user.id ? 'right' : 'left',\n            margin: '8px 0'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              display: 'inline-block',\n              background: msg.sender.id === user.id ? '#1976d2' : '#e0e0e0',\n              color: msg.sender.id === user.id ? '#fff' : '#222',\n              borderRadius: 16,\n              padding: '8px 14px',\n              maxWidth: 180,\n              wordBreak: 'break-word'\n            },\n            children: msg.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 9\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 8\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: '#888',\n            textAlign: 'center',\n            marginTop: 40\n          },\n          children: \"Select a user to start chatting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 5\n      }, this), selectedUser && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendMessage,\n        style: {\n          display: 'flex',\n          borderTop: '1px solid #eee',\n          padding: 8,\n          background: '#fff'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Type a message...\",\n          style: {\n            flex: 1,\n            border: 'none',\n            outline: 'none',\n            fontSize: 16,\n            padding: 8,\n            borderRadius: 8,\n            background: '#f5f5f5'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            marginLeft: 8,\n            background: isConnected ? '#1976d2' : '#aaa',\n            color: '#fff',\n            border: 'none',\n            borderRadius: 8,\n            padding: '8px 16px',\n            fontWeight: 'bold',\n            cursor: isConnected ? 'pointer' : 'not-allowed'\n          },\n          disabled: !isConnected,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 6\n      }, this), !isConnected && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#d32f2f',\n          textAlign: 'center',\n          fontSize: 13,\n          marginTop: 4\n        },\n        children: \"Connecting to chat server...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 3\n  }, this);\n};\n_s(Chat, \"aJ0IaQFnCvgR1FfTL5ah9J05lrE=\", false, function () {\n  return [useAuth];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","useRef","SockJS","CompatClient","Stomp","api","useAuth","jsxDEV","_jsxDEV","WS_URL","API_USERS","Chat","onClose","_s","user","users","setUsers","selectedUser","setSelectedUser","messages","setMessages","input","setInput","stompClient","setStompClient","isConnected","setIsConnected","messagesEndRef","get","then","res","data","filter","u","id","socket","client","over","connect","subscribe","username","msg","body","JSON","parse","prev","isBetween","sender","receiver","err","console","error","disconnect","catch","_err$response","response","message","alert","_messagesEndRef$curre","current","scrollIntoView","behavior","sendMessage","e","preventDefault","trim","content","type","send","stringify","style","display","height","children","width","background","borderRight","overflowY","padding","fontWeight","borderBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","cursor","onClick","fullName","flex","flexDirection","alignItems","justifyContent","border","fontSize","idx","textAlign","margin","color","borderRadius","maxWidth","wordBreak","marginTop","ref","onSubmit","borderTop","value","onChange","target","placeholder","outline","marginLeft","disabled","_c","$RefreshReg$"],"sources":["E:/Competition/Hackathon/Fixpoint_javafest/FixPoint/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport SockJS from 'sockjs-client';\r\nimport { CompatClient, Stomp } from '@stomp/stompjs';\r\nimport api from '../services/api';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nconst WS_URL = '/ws-chat';\r\nconst API_USERS = '/api/chat/users';\r\n\r\n\r\nconst Chat = ({ onClose }) => {\r\n\tconst { user } = useAuth();\r\n\tconst [users, setUsers] = useState([]);\r\n\tconst [selectedUser, setSelectedUser] = useState(null);\r\n\tconst [messages, setMessages] = useState([]);\r\n\tconst [input, setInput] = useState('');\r\n\tconst [stompClient, setStompClient] = useState(null);\r\n\tconst [isConnected, setIsConnected] = useState(false);\r\n\tconst messagesEndRef = useRef(null);\r\n\r\n\t// Fetch user list\r\n\tuseEffect(() => {\r\n\t\tapi.get(API_USERS).then(res => {\r\n\t\t\tsetUsers(res.data.filter(u => u.id !== user.id));\r\n\t\t});\r\n\t}, [user.id]);\r\n\r\n\r\n\t// Connect to WebSocket only once on mount\r\n\tuseEffect(() => {\r\n\t\tconst socket = new SockJS(WS_URL);\r\n\t\tconst client = Stomp.over(socket);\r\n\t\tsetIsConnected(false);\r\n\t\tclient.connect({}, () => {\r\n\t\t\tsetIsConnected(true);\r\n\t\t\tclient.subscribe(`/user/${user.username}/queue/messages`, (msg) => {\r\n\t\t\t\tconst body = JSON.parse(msg.body);\r\n\t\t\t\t// Only add message if it is between the logged-in user and the selected user\r\n\t\t\t\tsetMessages(prev => {\r\n\t\t\t\t\t// If no user selected, don't add\r\n\t\t\t\t\tif (!selectedUser) return prev;\r\n\t\t\t\t\tconst isBetween =\r\n\t\t\t\t\t\t(body.sender.id === user.id && body.receiver.id === selectedUser.id) ||\r\n\t\t\t\t\t\t(body.sender.id === selectedUser.id && body.receiver.id === user.id);\r\n\t\t\t\t\tif (isBetween) {\r\n\t\t\t\t\t\treturn [...prev, body];\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn prev;\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}, (err) => {\r\n\t\t\tsetIsConnected(false);\r\n\t\t\tconsole.error('STOMP connection error:', err);\r\n\t\t});\r\n\t\tsetStompClient(client);\r\n\t\treturn () => {\r\n\t\t\tclient.disconnect();\r\n\t\t\tsetIsConnected(false);\r\n\t\t};\r\n\t\t// eslint-disable-next-line\r\n\t}, [user.username]);\r\n\r\n\t// Fetch chat history when user selected\r\n\tuseEffect(() => {\r\n\t\tif (selectedUser) {\r\n\t\t\tapi.get(`/api/chat/history?userId=${selectedUser.id}`)\r\n\t\t\t\t.then(res => {\r\n\t\t\t\t\tsetMessages(res.data);\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => {\r\n\t\t\t\t\tsetMessages([]);\r\n\t\t\t\t\t// Optionally show error to user\r\n\t\t\t\t\tconsole.error('Failed to fetch chat history:', err?.response?.data || err.message);\r\n\t\t\t\t\talert('Failed to load chat history. Please try again or contact support.');\r\n\t\t\t\t});\r\n\t\t}\r\n\t}, [selectedUser]);\r\n\r\n\t// Scroll to bottom on new message\r\n\tuseEffect(() => {\r\n\t\tmessagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n\t}, [messages]);\r\n\r\n\tconst sendMessage = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (!input.trim() || !selectedUser || !isConnected || !stompClient) return;\r\n\t\ttry {\r\n\t\t\tconst msg = {\r\n\t\t\t\tcontent: input,\r\n\t\t\t\treceiver: { id: selectedUser.id },\r\n\t\t\t\ttype: 'TEXT',\r\n\t\t\t\tsender: { id: user.id }, // for optimistic UI\r\n\t\t\t};\r\n\t\t\t// Optimistically add the message to the chat\r\n\t\t\tsetMessages(prev => [...prev, { ...msg, sender: { id: user.id }, receiver: { id: selectedUser.id } }]);\r\n\t\t\tstompClient.send('/app/chat.send', {}, JSON.stringify(msg));\r\n\t\t\tsetInput('');\r\n\t\t} catch (err) {\r\n\t\t\talert('Unable to send message: STOMP connection not ready.');\r\n\t\t\tconsole.error('Send message error:', err);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div style={{ display: 'flex', height: '100%' }}>\r\n\t\t\t{/* User List Sidebar */}\r\n\t\t\t<div style={{ width: 120, background: '#f5f5f5', borderRight: '1px solid #eee', overflowY: 'auto' }}>\r\n\t\t\t\t<div style={{ padding: 8, fontWeight: 'bold', borderBottom: '1px solid #ddd' }}>Users</div>\r\n\t\t\t\t{users.map(u => (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tkey={u.id}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tpadding: 8,\r\n\t\t\t\t\t\t\tcursor: 'pointer',\r\n\t\t\t\t\t\t\tbackground: selectedUser?.id === u.id ? '#e3f2fd' : 'transparent',\r\n\t\t\t\t\t\t\tborderBottom: '1px solid #eee',\r\n\t\t\t\t\t\t\tfontWeight: selectedUser?.id === u.id ? 'bold' : 'normal',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClick={() => setSelectedUser(u)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{u.fullName || u.username}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t{/* Chat Window */}\r\n\t\t\t<div style={{ flex: 1, display: 'flex', flexDirection: 'column' }}>\r\n\t\t\t\t<div style={{ padding: 8, borderBottom: '1px solid #eee', display: 'flex', alignItems: 'center', justifyContent: 'space-between', background: '#f7f7f7' }}>\r\n\t\t\t\t\t<span>{selectedUser ? (selectedUser.fullName || selectedUser.username) : 'Select a user'}</span>\r\n\t\t\t\t\t<button onClick={onClose} style={{ background: 'none', border: 'none', fontSize: 18, cursor: 'pointer' }}>✖</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{ flex: 1, overflowY: 'auto', padding: 12, background: '#fafbfc' }}>\r\n\t\t\t\t\t{selectedUser ? (\r\n\t\t\t\t\t\tmessages.map((msg, idx) => (\r\n\t\t\t\t\t\t\t<div key={idx} style={{\r\n\t\t\t\t\t\t\t\ttextAlign: msg.sender.id === user.id ? 'right' : 'left',\r\n\t\t\t\t\t\t\t\tmargin: '8px 0',\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<span style={{\r\n\t\t\t\t\t\t\t\t\tdisplay: 'inline-block',\r\n\t\t\t\t\t\t\t\t\tbackground: msg.sender.id === user.id ? '#1976d2' : '#e0e0e0',\r\n\t\t\t\t\t\t\t\t\tcolor: msg.sender.id === user.id ? '#fff' : '#222',\r\n\t\t\t\t\t\t\t\t\tborderRadius: 16,\r\n\t\t\t\t\t\t\t\t\tpadding: '8px 14px',\r\n\t\t\t\t\t\t\t\t\tmaxWidth: 180,\r\n\t\t\t\t\t\t\t\t\twordBreak: 'break-word',\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t{msg.content}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div style={{ color: '#888', textAlign: 'center', marginTop: 40 }}>Select a user to start chatting</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<div ref={messagesEndRef} />\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* Input */}\r\n\t\t\t\t{selectedUser && (\r\n\t\t\t\t\t<form onSubmit={sendMessage} style={{ display: 'flex', borderTop: '1px solid #eee', padding: 8, background: '#fff' }}>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tvalue={input}\r\n\t\t\t\t\t\t\tonChange={e => setInput(e.target.value)}\r\n\t\t\t\t\t\t\tplaceholder=\"Type a message...\"\r\n\t\t\t\t\t\t\tstyle={{ flex: 1, border: 'none', outline: 'none', fontSize: 16, padding: 8, borderRadius: 8, background: '#f5f5f5' }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<button type=\"submit\" style={{ marginLeft: 8, background: isConnected ? '#1976d2' : '#aaa', color: '#fff', border: 'none', borderRadius: 8, padding: '8px 16px', fontWeight: 'bold', cursor: isConnected ? 'pointer' : 'not-allowed' }} disabled={!isConnected}>Send</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{!isConnected && (\r\n\t\t\t\t\t\t\t<div style={{ color: '#d32f2f', textAlign: 'center', fontSize: 13, marginTop: 4 }}>\r\n\t\t\t\t\t\t\t\tConnecting to chat server...\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}